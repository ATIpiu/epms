<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.epms.dao.commitLogDao.CommitLogDao">
    <insert id="insertIntoCommitLog" parameterType="com.epms.entity.CommitLog"
            useGeneratedKeys="true">
        INSERT INTO commitlog(sId, pId, cCreateTime, cType, cFileUrl, cResponseType)
        VALUES (#{sId}, #{pId}, #{cCreateTime}, #{cType}, #{cFileUrl}, #{cResponseType})
    </insert>

    <delete id="deleteCommitLog" parameterType="com.epms.entity.CommitLog">
        DELETE
        FROM commitlog
        WHERE sId = #{sId}
          AND pId = #{pId}
          AND cCreateTime = #{cCreateTime}
    </delete>

    <select id="clientGetCommitLog" resultType="com.epms.entity.CommitLog">
        SELECT sId, pId, cCreateTime, cType, cFeedback, cResponseType, cFileUrl
        FROM commitlog
        WHERE cType = 2
          AND pId IN (SELECT pId FROM project WHERE cId = #{cId})
        ORDER BY cCreateTime
    </select>

    <select id="managerGetCommitLog" resultType="com.epms.entity.CommitLog">

        SELECT sId, pId, cCreateTime, cType, cFeedback, cResponseType, cFileUrl
        FROM commitlog
        WHERE 1=1 AND pId in
        (SELECT pId FROM project WHERE(
        <if test="type==1">pModelManagerId</if>
        <if test="type==2">pRenderManagerId</if>
        <if test="type==3">pAfterManagerId</if>)
        =#{sId})
        AND sId in (SELECT sId FROM staff WHERE sType=${type}+3 OR sType=${type}+6)
        ORDER BY cCreateTime
    </select>

    <select id="generateFile" parameterType="string" resultType="int">
        SELECT *
        INTO OUTFILE #{path} CHARACTER SET 'gbk' FIELDS TERMINATED BY ','  LINES TERMINATED BY '\n'
        FROM (SELECT 'sId',
                     'pId',
                     'cCreateTime',
                     'cType',
                     'cFeedback',
                     'cResponseType',
                     'cFileUrl'

              UNION
              SELECT sId, pId, cCreateTime, cType, cFeedback, cResponseType, cFileUrl
              from commitlog) b
    </select>
    <update id="updateCommitLog" parameterType="com.epms.entity.CommitLog">
        UPDATE commitlog
        <set>
            <if test="cType!=null">cType=#{cType},</if>
            <if test="cFeedback!=null">cFeedback=#{cFeedback},</if>
            <if test="cResponseType!=null">cResponseType=#{cResponseType}</if>
        </set>
        WHERE sId=#{sId} AND pId=#{pId} AND cCreateTime=#{cCreateTime}

    </update>

    <select id="queryCommitLogsBysId" resultType="com.epms.entity.CommitLog" parameterType="int">
        SELECT sId, pId, cCreateTime, cType, cFeedback, cResponseType, cFileUrl
        FROM commitlog
        WHERE sId = #{sId}
        ORDER BY cCreateTime
    </select>

    <select id="queryCommitLogsBypId" resultType="com.epms.entity.CommitLog" parameterType="int">
        SELECT sId, pId, cCreateTime, cType, cFeedback, cResponseType, cFileUrl
        FROM commitlog
        WHERE pId = #{pId}
        ORDER BY cCreateTime
    </select>

    <select id="queryAllCommitLogs" resultType="com.epms.entity.CommitLog">
        SELECT sId, pId, cCreateTime, cType, cFeedback, cResponseType, cFileUrl
        FROM commitlog
        ORDER BY cCreateTime
    </select>


</mapper>